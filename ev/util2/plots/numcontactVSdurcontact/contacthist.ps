%!PS-Adobe-2.0
%%Title: contacthist.ps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Mon Oct 20 17:15:45 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 248 248
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 0.2 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 3.500 def
/userlinewidth gnulinewidth def
%
/vshift -26 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (contacthist.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Johan Henriksson,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Oct 20 17:15:45 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -1984 translate
0 setgray
newpath
(Helvetica) findfont 80 scalefont setfont
1.000 UL
LTb
519 240 M
-63 0 V
-48 0 R
( 1000) Rshow
1.000 UL
LTb
519 1064 M
-63 0 V
-48 0 R
( 1500) Rshow
1.000 UL
LTb
519 1888 M
-63 0 V
-48 0 R
( 2000) Rshow
1.000 UL
LTb
519 240 M
0 63 V
0 1585 R
0 -63 V
519 160 M
( 0) Cshow
1.000 UL
LTb
667 240 M
0 63 V
0 1585 R
0 -63 V
667 160 M
( 10) Cshow
1.000 UL
LTb
814 240 M
0 63 V
0 1585 R
0 -63 V
814 160 M
( 20) Cshow
1.000 UL
LTb
962 240 M
0 63 V
0 1585 R
0 -63 V
962 160 M
( 30) Cshow
1.000 UL
LTb
1110 240 M
0 63 V
0 1585 R
0 -63 V
0 -1665 R
( 40) Cshow
1.000 UL
LTb
1257 240 M
0 63 V
0 1585 R
0 -63 V
0 -1665 R
( 50) Cshow
1.000 UL
LTb
1405 240 M
0 63 V
0 1585 R
0 -63 V
0 -1665 R
( 60) Cshow
1.000 UL
LTb
1553 240 M
0 63 V
0 1585 R
0 -63 V
0 -1665 R
( 70) Cshow
1.000 UL
LTb
1700 240 M
0 63 V
0 1585 R
0 -63 V
0 -1665 R
( 80) Cshow
1.000 UL
LTb
1848 240 M
0 63 V
0 1585 R
0 -63 V
0 -1665 R
( 90) Cshow
1.000 UL
LTb
1.000 UL
LTb
519 1888 M
519 240 L
1329 0 V
0 1648 R
-1329 0 R
stroke
LCb setrgbcolor
80 1064 M
currentpoint gsave translate 90 rotate 0 0 M
(Number of contacts) Cshow
grestore
LTb
LCb setrgbcolor
1183 40 M
(Duration of contact [min]) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 80 scalefont setfont
534 240 Pls
534 242 Pls
534 243 Pls
534 245 Pls
534 247 Pls
534 248 Pls
534 250 Pls
534 252 Pls
549 253 Pls
549 255 Pls
549 256 Pls
549 258 Pls
549 260 Pls
549 261 Pls
549 263 Pls
563 265 Pls
563 266 Pls
563 268 Pls
563 270 Pls
563 271 Pls
563 273 Pls
563 275 Pls
563 276 Pls
563 278 Pls
563 280 Pls
563 281 Pls
563 283 Pls
563 284 Pls
563 286 Pls
563 288 Pls
563 289 Pls
563 291 Pls
563 293 Pls
563 294 Pls
578 296 Pls
578 298 Pls
578 299 Pls
578 301 Pls
578 303 Pls
578 304 Pls
578 306 Pls
578 308 Pls
578 309 Pls
578 311 Pls
578 313 Pls
578 314 Pls
578 316 Pls
578 317 Pls
578 319 Pls
578 321 Pls
578 322 Pls
578 324 Pls
578 326 Pls
578 327 Pls
578 329 Pls
578 331 Pls
578 332 Pls
578 334 Pls
578 336 Pls
593 337 Pls
593 339 Pls
608 341 Pls
608 342 Pls
608 344 Pls
608 345 Pls
608 347 Pls
608 349 Pls
608 350 Pls
608 352 Pls
608 354 Pls
608 355 Pls
608 357 Pls
608 359 Pls
608 360 Pls
608 362 Pls
608 364 Pls
608 365 Pls
608 367 Pls
608 369 Pls
608 370 Pls
608 372 Pls
608 373 Pls
608 375 Pls
608 377 Pls
608 378 Pls
608 380 Pls
608 382 Pls
608 383 Pls
608 385 Pls
608 387 Pls
608 388 Pls
608 390 Pls
622 392 Pls
622 393 Pls
622 395 Pls
622 397 Pls
622 398 Pls
622 400 Pls
622 402 Pls
622 403 Pls
622 405 Pls
622 406 Pls
622 408 Pls
622 410 Pls
622 411 Pls
622 413 Pls
622 415 Pls
622 416 Pls
622 418 Pls
622 420 Pls
622 421 Pls
622 423 Pls
622 425 Pls
622 426 Pls
622 428 Pls
637 430 Pls
637 431 Pls
637 433 Pls
637 434 Pls
637 436 Pls
637 438 Pls
637 439 Pls
637 441 Pls
637 443 Pls
637 444 Pls
637 446 Pls
637 448 Pls
637 449 Pls
637 451 Pls
637 453 Pls
637 454 Pls
637 456 Pls
637 458 Pls
652 459 Pls
652 461 Pls
667 462 Pls
681 464 Pls
681 466 Pls
681 467 Pls
696 469 Pls
696 471 Pls
696 472 Pls
696 474 Pls
696 476 Pls
696 477 Pls
696 479 Pls
696 481 Pls
696 482 Pls
696 484 Pls
696 486 Pls
696 487 Pls
696 489 Pls
696 490 Pls
696 492 Pls
696 494 Pls
696 495 Pls
696 497 Pls
696 499 Pls
696 500 Pls
696 502 Pls
696 504 Pls
696 505 Pls
696 507 Pls
696 509 Pls
696 510 Pls
696 512 Pls
696 514 Pls
696 515 Pls
696 517 Pls
696 519 Pls
696 520 Pls
696 522 Pls
696 523 Pls
696 525 Pls
696 527 Pls
696 528 Pls
711 530 Pls
711 532 Pls
711 533 Pls
711 535 Pls
711 537 Pls
711 538 Pls
711 540 Pls
711 542 Pls
726 543 Pls
726 545 Pls
726 547 Pls
726 548 Pls
726 550 Pls
726 551 Pls
726 553 Pls
726 555 Pls
726 556 Pls
726 558 Pls
726 560 Pls
726 561 Pls
726 563 Pls
726 565 Pls
726 566 Pls
726 568 Pls
726 570 Pls
726 571 Pls
726 573 Pls
726 575 Pls
726 576 Pls
726 578 Pls
726 579 Pls
741 581 Pls
741 583 Pls
741 584 Pls
741 586 Pls
741 588 Pls
741 589 Pls
741 591 Pls
741 593 Pls
741 594 Pls
741 596 Pls
741 598 Pls
741 599 Pls
741 601 Pls
741 603 Pls
770 604 Pls
785 606 Pls
800 608 Pls
814 609 Pls
829 611 Pls
844 612 Pls
859 614 Pls
859 616 Pls
859 617 Pls
859 619 Pls
859 621 Pls
859 622 Pls
859 624 Pls
859 626 Pls
859 627 Pls
859 629 Pls
859 631 Pls
859 632 Pls
859 634 Pls
859 636 Pls
859 637 Pls
859 639 Pls
859 640 Pls
859 642 Pls
859 644 Pls
859 645 Pls
859 647 Pls
859 649 Pls
859 650 Pls
859 652 Pls
859 654 Pls
859 655 Pls
859 657 Pls
859 659 Pls
859 660 Pls
859 662 Pls
859 664 Pls
859 665 Pls
859 667 Pls
859 668 Pls
859 670 Pls
859 672 Pls
859 673 Pls
859 675 Pls
859 677 Pls
859 678 Pls
859 680 Pls
859 682 Pls
859 683 Pls
873 685 Pls
873 687 Pls
873 688 Pls
873 690 Pls
873 692 Pls
873 693 Pls
873 695 Pls
873 696 Pls
873 698 Pls
873 700 Pls
873 701 Pls
873 703 Pls
873 705 Pls
873 706 Pls
903 708 Pls
903 710 Pls
903 711 Pls
903 713 Pls
903 715 Pls
903 716 Pls
903 718 Pls
903 720 Pls
903 721 Pls
903 723 Pls
903 725 Pls
903 726 Pls
903 728 Pls
903 729 Pls
903 731 Pls
903 733 Pls
903 734 Pls
903 736 Pls
903 738 Pls
903 739 Pls
903 741 Pls
903 743 Pls
903 744 Pls
903 746 Pls
903 748 Pls
903 749 Pls
903 751 Pls
903 753 Pls
903 754 Pls
903 756 Pls
903 757 Pls
903 759 Pls
903 761 Pls
903 762 Pls
903 764 Pls
903 766 Pls
903 767 Pls
903 769 Pls
903 771 Pls
903 772 Pls
903 774 Pls
903 776 Pls
903 777 Pls
903 779 Pls
903 781 Pls
903 782 Pls
903 784 Pls
903 785 Pls
903 787 Pls
903 789 Pls
918 790 Pls
918 792 Pls
918 794 Pls
932 795 Pls
932 797 Pls
932 799 Pls
932 800 Pls
932 802 Pls
932 804 Pls
932 805 Pls
932 807 Pls
932 809 Pls
932 810 Pls
932 812 Pls
932 814 Pls
932 815 Pls
932 817 Pls
932 818 Pls
932 820 Pls
947 822 Pls
962 823 Pls
977 825 Pls
992 827 Pls
1036 828 Pls
1065 830 Pls
1065 832 Pls
1080 833 Pls
1095 835 Pls
1110 837 Pls
1110 838 Pls
1139 840 Pls
1139 842 Pls
1154 843 Pls
1154 845 Pls
1154 846 Pls
1154 848 Pls
1154 850 Pls
1154 851 Pls
1154 853 Pls
1154 855 Pls
1154 856 Pls
1169 858 Pls
1169 860 Pls
1169 861 Pls
1169 863 Pls
1169 865 Pls
1169 866 Pls
1169 868 Pls
1169 870 Pls
1169 871 Pls
1169 873 Pls
1169 874 Pls
1169 876 Pls
1169 878 Pls
1169 879 Pls
1169 881 Pls
1169 883 Pls
1184 884 Pls
1184 886 Pls
1184 888 Pls
1184 889 Pls
1184 891 Pls
1184 893 Pls
1184 894 Pls
1184 896 Pls
1198 898 Pls
1198 899 Pls
1198 901 Pls
1198 902 Pls
1198 904 Pls
1198 906 Pls
1198 907 Pls
1198 909 Pls
1198 911 Pls
1198 912 Pls
1198 914 Pls
1198 916 Pls
1213 917 Pls
1213 919 Pls
1213 921 Pls
1213 922 Pls
1213 924 Pls
1213 926 Pls
1213 927 Pls
1213 929 Pls
1213 931 Pls
1228 932 Pls
1228 934 Pls
1228 935 Pls
1228 937 Pls
1228 939 Pls
1228 940 Pls
1228 942 Pls
1228 944 Pls
1257 945 Pls
1257 947 Pls
1257 949 Pls
1257 950 Pls
1257 952 Pls
1257 954 Pls
1257 955 Pls
1257 957 Pls
1257 959 Pls
1257 960 Pls
1257 962 Pls
1257 963 Pls
1257 965 Pls
1257 967 Pls
1257 968 Pls
1257 970 Pls
1257 972 Pls
1257 973 Pls
1257 975 Pls
1257 977 Pls
1257 978 Pls
1257 980 Pls
1257 982 Pls
1257 983 Pls
1257 985 Pls
1257 987 Pls
1257 988 Pls
1257 990 Pls
1257 991 Pls
1257 993 Pls
1257 995 Pls
1257 996 Pls
1257 998 Pls
1257 1000 Pls
1257 1001 Pls
1257 1003 Pls
1257 1005 Pls
1257 1006 Pls
1257 1008 Pls
1257 1010 Pls
1257 1011 Pls
1257 1013 Pls
1257 1015 Pls
1257 1016 Pls
1257 1018 Pls
1257 1020 Pls
1257 1021 Pls
1257 1023 Pls
1257 1024 Pls
1257 1026 Pls
1257 1028 Pls
1257 1029 Pls
1257 1031 Pls
1257 1033 Pls
1257 1034 Pls
1257 1036 Pls
1257 1038 Pls
1257 1039 Pls
1257 1041 Pls
1257 1043 Pls
1257 1044 Pls
1257 1046 Pls
1257 1048 Pls
1257 1049 Pls
1272 1051 Pls
1272 1052 Pls
1287 1054 Pls
1287 1056 Pls
1302 1057 Pls
1302 1059 Pls
1302 1061 Pls
1302 1062 Pls
1302 1064 Pls
1302 1066 Pls
1302 1067 Pls
1302 1069 Pls
1302 1071 Pls
1316 1072 Pls
1316 1074 Pls
1331 1076 Pls
1331 1077 Pls
1346 1079 Pls
1346 1080 Pls
1361 1082 Pls
1361 1084 Pls
1375 1085 Pls
1405 1087 Pls
1405 1089 Pls
1435 1090 Pls
1435 1092 Pls
1464 1094 Pls
1494 1095 Pls
1523 1097 Pls
1538 1099 Pls
1538 1100 Pls
1553 1102 Pls
1567 1104 Pls
1567 1105 Pls
1582 1107 Pls
1582 1108 Pls
1612 1110 Pls
1641 1112 Pls
1686 1113 Pls
1730 1115 Pls
1730 1117 Pls
1759 1118 Pls
1774 1120 Pls
1774 1122 Pls
1774 1123 Pls
1774 1125 Pls
1774 1127 Pls
1774 1128 Pls
1774 1130 Pls
1774 1132 Pls
1789 1133 Pls
1789 1135 Pls
1789 1137 Pls
1.000 UL
LTb
519 1888 M
519 240 L
1329 0 V
0 1648 R
-1329 0 R
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
